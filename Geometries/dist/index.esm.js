import{BufferGeometry as t,Float32Attribute as e,Vector3 as a,Uint32Attribute as r}from"@gl-widget/gl-widget";class h extends t{constructor(t){super(),this.indices=[],this.uvs=[],this.positions=[],this.normals=[],this.generateGeometry(t)}generateGeometry(t){let{radius:h=1,widthSegments:i=16,heightSegments:s=16,phiStart:o=0,phiLength:n=2*Math.PI,thetaStart:d=0,thetaLength:M=Math.PI}=t;i=Math.max(3,Math.floor(i)),s=Math.max(2,Math.floor(s)),o=void 0!==o?o:0,n=void 0!==n?n:2*Math.PI,d=void 0!==d?d:0,M=void 0!==M?M:Math.PI;for(var u=d+M,l=(i+1)*(s+1),g=new e(new Float32Array(3*l),3),m=new e(new Float32Array(3*l),3),p=new e(new Float32Array(2*l),2),v=0,w=[],f=new a,A=0;A<=s;A++){for(var c=[],x=A/s,y=0;y<=i;y++){var I=y/i,P=-h*Math.cos(o+I*n)*Math.sin(d+x*M),b=h*Math.cos(d+x*M),S=h*Math.sin(o+I*n)*Math.sin(d+x*M);f.set(P,b,S).normalize(),g.setXYZ(v,P,b,S),m.setXYZ(v,f.x,f.y,f.z),p.setXY(v,I,1-x),c.push(v),v++}w.push(c)}var F=[];for(A=0;A<s;A++)for(y=0;y<i;y++){var X=w[A][y+1],Y=w[A][y],z=w[A+1][y],G=w[A+1][y+1];(0!==A||d>0)&&F.push(X,Y,G),(A!==s-1||u<Math.PI)&&F.push(Y,z,G)}this.addAttribute("position",g),this.addAttribute("normal",m),this.addAttribute("uv",p),this.addAttribute("index",new r(F,1))}}export{h as SphereGeometry};
//# sourceMappingURL=index.esm.js.map
